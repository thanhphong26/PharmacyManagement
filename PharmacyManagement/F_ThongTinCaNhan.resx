<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptb_NhanVien.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>